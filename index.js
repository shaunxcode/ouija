// Generated by CoffeeScript 1.3.3
(function() {

  $.fn.ouija = function() {
    var self;
    self = this;
    this.hide();
    return this.each(function(i, select) {
      var $list, $planchette, $select, active, dragging, selected;
      $select = $(select);
      $select.after($list = $("<ul />").addClass("ouijaBoard"));
      $list.addClass($select.prop("class"));
      selected = 0;
      active = false;
      $("option", $select).each(function(index) {
        var $li, $option;
        $option = $(this);
        if ($option.is(":selected")) {
          selected = index;
        }
        return $list.append($li = $("<li />").droppable({
          hoverClass: "onHover",
          drop: function() {
            var dragging;
            dragging = false;
            return $li.click();
          }
        }).addClass("ouija-" + ($option.prop("value"))).text($option.text()).on({
          click: function() {
            var bw;
            $select.val($option.prop("value"));
            $select.trigger("change");
            if (typeof active.removeClass === "function") {
              active.removeClass("on");
            }
            active = $li;
            bw = (parseInt($planchette.css("border-width"))) * 2;
            $planchette.prop("class", "planchette");
            return $planchette.animate({
              top: $li.position().top,
              left: $li.position().left,
              width: $li.outerWidth() - bw,
              height: $li.outerHeight() - bw
            }, 150, function() {
              $("li", $list).removeClass("on");
              $planchette.addClass("ouija-on-" + ($option.prop("value")));
              return $li.addClass("on");
            });
          }
        }));
      });
      $list.append($planchette = $("<div />").addClass("planchette").css({
        height: $list.height()
      }));
      dragging = false;
      $planchette.on({
        click: function() {
          var first, next;
          if (dragging) {
            return;
          }
          next = active.nextAll("li").first();
          if (next.length) {
            return $(next).click();
          } else {
            first = active.prevAll("li").last();
            if (first.length) {
              return $(first).click();
            }
          }
        }
      });
      $planchette.draggable({
        containment: "parent",
        start: function() {
          if (active != null) {
            active.removeClass("on");
          }
          return dragging = true;
        },
        stop: function() {
          return setTimeout((function() {
            return dragging = false;
          }), 100);
        }
      });
      return $("li", $list).eq(selected).click();
    });
  };

  module.exports = function(selector) {
    return $(selector).ouija();
  };

}).call(this);
